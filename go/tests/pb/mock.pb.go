// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: mock.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// enum
type MockPayload_Status int32

const (
	MockPayload_UNKNOWN MockPayload_Status = 0
	MockPayload_OK      MockPayload_Status = 1
	MockPayload_FAILED  MockPayload_Status = 2
)

// Enum value maps for MockPayload_Status.
var (
	MockPayload_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "OK",
		2: "FAILED",
	}
	MockPayload_Status_value = map[string]int32{
		"UNKNOWN": 0,
		"OK":      1,
		"FAILED":  2,
	}
)

func (x MockPayload_Status) Enum() *MockPayload_Status {
	p := new(MockPayload_Status)
	*p = x
	return p
}

func (x MockPayload_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MockPayload_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_mock_proto_enumTypes[0].Descriptor()
}

func (MockPayload_Status) Type() protoreflect.EnumType {
	return &file_mock_proto_enumTypes[0]
}

func (x MockPayload_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MockPayload_Status.Descriptor instead.
func (MockPayload_Status) EnumDescriptor() ([]byte, []int) {
	return file_mock_proto_rawDescGZIP(), []int{0, 0}
}

type MockPayload struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 정수형
	Width  int32 `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height int64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	// 부동소수점
	Confidence  float32 `protobuf:"fixed32,3,opt,name=confidence,proto3" json:"confidence,omitempty"`
	Temperature float64 `protobuf:"fixed64,4,opt,name=temperature,proto3" json:"temperature,omitempty"`
	// 불리언
	IsValid bool `protobuf:"varint,5,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	// 문자열
	Label string `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
	// 바이트 배열
	ImageData []byte `protobuf:"bytes,7,opt,name=image_data,json=imageData,proto3" json:"image_data,omitempty"`
	// 반복 (리스트)
	Points        []int32                 `protobuf:"varint,8,rep,packed,name=points,proto3" json:"points,omitempty"`
	Tags          []*MockPayload_Metadata `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty"`
	Status        MockPayload_Status      `protobuf:"varint,10,opt,name=status,proto3,enum=mockproto.MockPayload_Status" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MockPayload) Reset() {
	*x = MockPayload{}
	mi := &file_mock_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MockPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MockPayload) ProtoMessage() {}

func (x *MockPayload) ProtoReflect() protoreflect.Message {
	mi := &file_mock_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MockPayload.ProtoReflect.Descriptor instead.
func (*MockPayload) Descriptor() ([]byte, []int) {
	return file_mock_proto_rawDescGZIP(), []int{0}
}

func (x *MockPayload) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *MockPayload) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *MockPayload) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

func (x *MockPayload) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *MockPayload) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *MockPayload) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *MockPayload) GetImageData() []byte {
	if x != nil {
		return x.ImageData
	}
	return nil
}

func (x *MockPayload) GetPoints() []int32 {
	if x != nil {
		return x.Points
	}
	return nil
}

func (x *MockPayload) GetTags() []*MockPayload_Metadata {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *MockPayload) GetStatus() MockPayload_Status {
	if x != nil {
		return x.Status
	}
	return MockPayload_UNKNOWN
}

// 중첩 메시지
type MockPayload_Metadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MockPayload_Metadata) Reset() {
	*x = MockPayload_Metadata{}
	mi := &file_mock_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MockPayload_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MockPayload_Metadata) ProtoMessage() {}

func (x *MockPayload_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_mock_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MockPayload_Metadata.ProtoReflect.Descriptor instead.
func (*MockPayload_Metadata) Descriptor() ([]byte, []int) {
	return file_mock_proto_rawDescGZIP(), []int{0, 0}
}

func (x *MockPayload_Metadata) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MockPayload_Metadata) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_mock_proto protoreflect.FileDescriptor

const file_mock_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"mock.proto\x12\tmockproto\"\xb0\x03\n" +
	"\vMockPayload\x12\x14\n" +
	"\x05width\x18\x01 \x01(\x05R\x05width\x12\x16\n" +
	"\x06height\x18\x02 \x01(\x03R\x06height\x12\x1e\n" +
	"\n" +
	"confidence\x18\x03 \x01(\x02R\n" +
	"confidence\x12 \n" +
	"\vtemperature\x18\x04 \x01(\x01R\vtemperature\x12\x19\n" +
	"\bis_valid\x18\x05 \x01(\bR\aisValid\x12\x14\n" +
	"\x05label\x18\x06 \x01(\tR\x05label\x12\x1d\n" +
	"\n" +
	"image_data\x18\a \x01(\fR\timageData\x12\x16\n" +
	"\x06points\x18\b \x03(\x05R\x06points\x123\n" +
	"\x04tags\x18\t \x03(\v2\x1f.mockproto.MockPayload.MetadataR\x04tags\x125\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2\x1d.mockproto.MockPayload.StatusR\x06status\x1a2\n" +
	"\bMetadata\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\")\n" +
	"\x06Status\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\x06\n" +
	"\x02OK\x10\x01\x12\n" +
	"\n" +
	"\x06FAILED\x10\x02B6Z4github.com/prismtech-dev/type-safe-mq/go/tests/pb;pbb\x06proto3"

var (
	file_mock_proto_rawDescOnce sync.Once
	file_mock_proto_rawDescData []byte
)

func file_mock_proto_rawDescGZIP() []byte {
	file_mock_proto_rawDescOnce.Do(func() {
		file_mock_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mock_proto_rawDesc), len(file_mock_proto_rawDesc)))
	})
	return file_mock_proto_rawDescData
}

var file_mock_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_mock_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_mock_proto_goTypes = []any{
	(MockPayload_Status)(0),      // 0: mockproto.MockPayload.Status
	(*MockPayload)(nil),          // 1: mockproto.MockPayload
	(*MockPayload_Metadata)(nil), // 2: mockproto.MockPayload.Metadata
}
var file_mock_proto_depIdxs = []int32{
	2, // 0: mockproto.MockPayload.tags:type_name -> mockproto.MockPayload.Metadata
	0, // 1: mockproto.MockPayload.status:type_name -> mockproto.MockPayload.Status
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_mock_proto_init() }
func file_mock_proto_init() {
	if File_mock_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mock_proto_rawDesc), len(file_mock_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mock_proto_goTypes,
		DependencyIndexes: file_mock_proto_depIdxs,
		EnumInfos:         file_mock_proto_enumTypes,
		MessageInfos:      file_mock_proto_msgTypes,
	}.Build()
	File_mock_proto = out.File
	file_mock_proto_goTypes = nil
	file_mock_proto_depIdxs = nil
}
